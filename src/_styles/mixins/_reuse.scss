@mixin trans($prop: all, $d: $duration, $e: $easing) {
    transition: $prop $d $e;
}

@mixin title($size: $lg, $color: $black, $background: $black, $lineHeight: 3px) {
    text-transform: uppercase;
    font-family: $titleFont;
    font-size: $size;
    color: $color;
    position: relative;
    padding-bottom: 10px;
    font-weight: 700;

    &:after {
        content: "";
        display: block;
        position: absolute;
        height: $lineHeight;
        width: 30px;
        background: $background;
        bottom: 0;
        left: 0;
    }
}

@mixin padd($mode: both, $size: full) {
    @if $size == full {

        @if $mode == both {

            padding-top: 16%;
            padding-bottom: 16%;

            @include mq(sm){
                padding-top: 12%;
                padding-bottom: 12%;
            }

            @include mq(md){
                padding-top: 8%;
                padding-bottom: 8%;
            }
        }

        @if $mode == top {

            padding-top: 16%;

            @include mq(sm){
                padding-top: 12%;
            }

            @include mq(md){
                padding-top: 8%;
            }
        }

        @if $mode == bottom {

            padding-bottom: 16%;

            @include mq(sm){
                padding-bottom: 12%;
            }

            @include mq(md){
                padding-bottom: 8%;
            }
        }
    }

    @if $size == half {
        @if $mode == both {

            padding-top: 8%;
            padding-bottom: 8%;

            @include mq(sm){
                padding-top: 6%;
                padding-bottom: 6%;
            }

            @include mq(md){
                padding-top: 4%;
                padding-bottom: 4%;
            }
        }

        @if $mode == top {

            padding-top: 8%;

            @include mq(sm){
                padding-top: 6%;
            }

            @include mq(md){
                padding-top: 4%;
            }
        }

        @if $mode == bottom {

            padding-bottom: 8%;

            @include mq(sm){
                padding-bottom: 6%;
            }

            @include mq(md){
                padding-bottom: 4%;
            }
        }
    }
}

@mixin overlay($level: rgba(0,0,0,.5), $zdex: 2) {
    position: absolute;
    top:0;
    left:0;
    right:0;
    bottom:0;
    background: $level;
    z-index: $zdex;
}

@mixin close($color: $white, $size: 24px) {
    position: absolute;
    display: block;
    width: $size;
    height: $size;
    cursor: pointer;
    transform: rotate(45deg);

    span{
        width: 100%;
        height: 2px;
        position: absolute;
        top:calc(50% - 1px);
        background: $color;
        display: block;

        &:last-child {
            transform: rotate(90deg);
        }
    }
}

@mixin caret($point: up, $size: 20px, $color: $white) {
    width: $size;
    height: $size;
    position: relative;
    display: inline-block;

    &:before{
        position: absolute;
        content: '';
        width: 100%;
        height: 100%;
        border-bottom: 2px solid $color;
        border-left: 2px solid $color;
        left:0;

        @if $point == up {
            top:60%;
            transform: rotate(135deg);
        }

        @if $point == down {
            bottom:10%;
            transform: rotate(-45deg);
        }
    }
}

@mixin img($ratio: 56.5%, $width: 100%, $imgheight: auto, $imgwidth: 100%) {
    position: relative;
    width: $width;
    overflow: hidden;
    padding-bottom: $ratio;
    height: 0;

    img {
        position: absolute;
        width: $imgwidth;
        height: $imgheight;
        left: 0;
        top: 0;
    }
}

@mixin arrow($pointTo, $color: inherit) {
    &:after {
        content: "";
        border: 10px solid;
        border-color: $color;
        height: 0;
        width: 0;
        position: absolute;
        z-index: 5;

        @if $pointTo == down {
            border-left-color: transparent;
            border-right-color: transparent;
            border-bottom-color: transparent;
            top: 100%;
            left: calc(50% - 10px);
        }

        @if $pointTo == up {
            border-left-color: transparent;
            border-right-color: transparent;
            border-top-color: transparent;
            bottom: 100%;
            left: calc(50% - 10px);
        }

        @if $pointTo == left {
            border-left-color: transparent;
            border-bottom-color: transparent;
            border-top-color: transparent;
            right: 100%;
            top: calc(50% - 10px);
        }

        @if $pointTo == right {
            border-right-color: transparent;
            border-bottom-color: transparent;
            border-top-color: transparent;
            left: 100%;
            top: calc(50% - 10px);
        }
    }
}

@mixin heroTitle($color: $white, $font: $titleFont, $fontSizeMobile: $xl, $fontSizeDesktop: $head) {
    color: $color;
    text-transform: uppercase;
    font-family: $font;
    padding: 20px 30px;
    min-height: 130px;
    margin-top: -130px;
    z-index: 5;
    display: flex;
    position: relative;
    align-items: center;
    // text-align: center;

    @include mq(sm) {
        @include trans;

        position: absolute;
        min-height: auto;
        top: auto;
        bottom: 0;
        width: 50%;
        min-height: auto;
        margin-top: auto;

        &.-open {
            transform: translateX(67%);
        }
    }

    h1 {
        margin: 0;
        padding:0;
        font-size: $fontSizeMobile;
        font-weight: 700;

        @include mq(sm) {
            font-size: $fontSizeDesktop;
        }
    }
}
